<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- create a singleton http client instance and initialize it with an initializer
         Create the client with SSL support
        -->
    <!--
    <bean id="amadeus.transport.httpclient.SslFactory"
          class="org.eclipse.jetty.util.ssl.SslContextFactory">
        <property name="trustAll" value="${amadeus.transport.httpclient.SslFactory/trustAll=true}"/>
    </bean>
    -->

    <bean id="amadeus.transport.HttpClient"
          class="org.eclipse.jetty.client.HttpClient"
          scope="singleton">
        <!--<constructor-arg ref="amadeus.transport.httpclient.SslFactory"/>-->
    </bean>

    <bean id="amadeus.transport.HttpClientInitializer"
          class="com.expedia.s3.cars.framework.servicerequest.http.HttpClientInitializer"
          scope="singleton"
          lazy-init="false">
        <property name="httpClient" ref="amadeus.transport.HttpClient"/>
        <!--
        <property name="corePoolSize" value="${amadeus.transport.HttpClient/corePoolSize=200}"/>
        <property name="maxPoolSize" value="${amadeus.transport.HttpClient/maxPoolSize=201}"/>
        <property name="threadIdleTimeoutMs" value="${amadeus.transport.HttpClient/threadIdleTimeoutMs=60000}"/>
        <property name="queueSize" value="${amadeus.transport.HttpClient/queueSize=50}"/>
        -->
    </bean>


</beans>